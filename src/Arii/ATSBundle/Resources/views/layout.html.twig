{% extends "::base.html.twig" %}
{% block dhtmlx %}
{% if arii_pro %}
	<link rel="stylesheet" type="text/css" href="{{ asset('dhtmlx_pro/skins/' ~  skin ~ '/dhtmlx.css') }}" />
        <script src="{{ asset('dhtmlx_pro/codebase/dhtmlx.js') }}" type="text/javascript"></script>
{% else %}
	<link rel="stylesheet" type="text/css" href="{{ asset('dhtmlx_gpl/skins/terrace/dhtmlx.css') }}" />
        <script src="{{ asset('dhtmlx_gpl/codebase/dhtmlx.js') }}" type="text/javascript"></script>
{% endif %}
{% endblock dhtmlx %}
{% block dhtmlx_plus %}
{% endblock dhtmlx_plus %}
{% block body %}
{% endblock body %}
{% block script %}
<script>
function StateRibbon (itemid,state) {
    switch(itemid) {
         case 'chained':
            chained = (state?1:0);
            globalLayout.progressOn();
            break;
         case 'only_warning':
            only_warning = (state?1:0);
            globalLayout.progressOn();
            break;
        default:
            alert(itemid);
    }
    GlobalRefresh();    
}

function ClickRibbon (itemid,state) {
    switch(itemid) {
    case '-0.5': case '-0.25': case '-0.20':
    case '-1': case '-2': case '-3': case '-4': case '-5': case '-6':
    case '-7': case '-14': case '-21': 
    case '-30': case '-60': case '-90': case '-120': case '-180':
    case '-365':
        dhx4.ajax.get( "{{ url('arii_session_update') }}?ref_past="+itemid, function() {
            var currentTime = new Date();
            var newTime = new Date();
            newTime.setDate(currentTime.getDate() + Number(itemid) );
            var day = newTime.getDate();
            var month = newTime.getMonth()+1;
            var year = newTime.getFullYear();
            if (day < 10){
            day = "0" + day;
            }
            if (month < 10){
                month = "0" + month;
            }
            myRibbon.setItemText( "ref_past", year + "-" + month + "-" +  day );
            globalLayout.progressOn();
            GlobalRefresh();    
        });
        break;
     case '5':
    case '30':
    case '60':
    case '300':
    case '900':
    case '1800':
    case '3600':
        update = itemid;
        dhx4.ajax.get( "{{ url('arii_session_update') }}?refresh="+itemid, function() {
            globalLayout.progressOn();
            GlobalRefresh();
        });
        break;
    case 'menu_jobs':
        window.location = "{{ url('arii_ATS_jobs') }}";
        break;
    case 'menu_events':
        window.location = "{{ url('arii_ATS_events') }}";
        break;
    case 'menu_processed':
        window.location = "{{ url('arii_ATS_processed') }}";
        break;
    case 'menu_alarms':
        window.location = "{{ url('arii_ATS_alarms') }}";
        break;
    case 'menu_errors':
        window.location = "{{ url('arii_ATS_errors') }}";
        break;
    case 'menu_servers':
        window.location = "{{ url('arii_ATS_servers') }}";
        break;
    case 'menu_agents':
        window.location = "{{ url('arii_ATS_agents') }}";
        break;
    case 'menu_audit':
        window.location = "{{ url('arii_ATS_audit') }}";
        break;
    case 'filter_all':
            globalLayout.cells("a").progressOn();
            globalLayout.cells("b").progressOn();
            dhx4.ajax.get( "{{ url('arii_session_update') }}?filter=-1"+itemid.substr(7), function(){
                GridRefresh();
            });
        break;
    default:
        if (itemid.substr(0,6)=='filter') {
            globalLayout.cells("a").progressOn();
            globalLayout.cells("b").progressOn();
//            this.setItemText( 'filter', this.getListOptionText('filter',itemid));
            this.setItemText("current_filter",myRibbon.getItemOptionText('Filters',itemid));
            dhx4.ajax.get( "{{ url('arii_session_update') }}?filter="+itemid.substr(7), function(){
                GridRefresh();
            });
        }
        else {
            alert(itemid);
        }
    }
}

function Sendevent( Job, Event )
{
    Time = false;
    var largeur = 640;
    var dhxWins = new dhtmlXWindows();

    msg = dhxWins.createWindow( "sendevent" ,  (document.body.offsetWidth-largeur)/2, 50, largeur, 400 );
    
    var form = msg.attachForm();
    form.loadStruct("{{ url('json_ATS_sendevent_form') }}", function(){
        form.setItemValue("JOB",Job);
        form.setItemValue("ACTION",Event);
        form.setItemValue("STATUS",Event);
        form.hideItem("FORCE");
        form.hideItem("RESPONSE");
        form.hideItem("STATUS");
        switch(Event) {
            case 'KILLJOB':
                Text = "{{ "Kill Job" | trans }}";
                break;
            case 'STARTJOB':
                Text = "{{ "Start Job" | trans }}";
                form.showItem("FORCE");
                break;
            case 'JOB_ON_NOEXEC':
            case 'JOB_ON_ICE':
            case 'JOB_ON_HOLD':
                Text = "{{ "Block job" | trans }}";
                break;
            case 'JOB_OFF_NOEXEC':
            case 'JOB_OFF_ICE':
            case 'JOB_OFF_HOLD':
                Text = "{{ "Unblock job" | trans }}";
                break;
            case 'INACTIVE':
            case 'SUCCESS':
            case 'FAILURE':
            case 'TERMINATED':
                Text = "{{ "Change status" | trans }} "+Event;
                form.showItem("STATUS");
                break;
            case 'REPLY_RESPONSE':
            case 'WAIT_REPLY':
                Text = "{{ "Reply" | trans }}";
                form.hideItem("COMMENT");
                form.showItem("RESPONSE");
                break;
            default:
                Text = "{{ "Send event" | trans }}";
                break;
        }
        msg.setText( Text );    
    });
            
    var toolbar;
    toolbar = msg.attachToolbar();
    toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
    toolbar.loadStruct( "{{ url('xml_ATS_sendevent_form_toolbar') }}" ,function(){
        if (Time) {
            GBCalendar = new dhtmlXCalendarObject(toolbar.getInput('ref_date'));
            GBCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
            GBCalendar.setWeekStartDay(1);
        }
    });

    form.attachEvent("onButtonClick", function(name) {
        dhtmlx.message({
            type: "Notice",
            text: Text,
            width: "800"
        });
        msg.progressOn();
        var job = form.getItemValue('JOB');
        var action = form.getItemValue('ACTION');
        var comment = form.getItemValue('COMMENT');
        var force = form.getItemValue('FORCE');
        form.send("{{ url('html_ATS_sendevent_exec') }}","POST",function(loader,response){
            dhtmlx.message({
                type: "Notice",
                expire: 10000,
                width: "800px",
                text: loader.xmlDoc.responseText
            });
            msg.progressOff();
            msg.close();
            
            GridRefresh();
            globalLayout.cells("b").progressOn();
        });               
    });

    toolbar.attachEvent("onClick",function(itemid){
        switch(itemid) {
            case "execute":
                if (Time)
                    start_time = toolbar.getValue("ref_date");
                break;
            case "cancel":
                msg.close();
                break;
            default:
                alert(itemid);
                break;
        }
        return true;
    });
/*            
    dhtmlXCalendarObject.prototype.langData["fr"] = {
            monthesFNames: ["Janvier","Février","Маrs","Аvril","Маi","Juin","Juillet","Аoût","Septembre","Оctobre","Novembre","Décembre"],
            monthesSNames: ["Jan.","Fév.","Маrs","Аvr","Маi","Juin","Jui.","Août","Sep.","Оct.","Nov.","Déc."],
            daysFNames: ["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"],
            daysSNames: ["Di","Lu","Ma","Me","Je","Ve","Sa"],
            weekstart: 1
    };
    dhxCalendar = new dhtmlXCalendarObject(dhxForm.getInput("at"));
    dhxCalendar.loadUserLanguage("fr");
    dhxCalendar.setDateFormat("%Y-%m-%d %H:%i:%s");
    dhxCalendar.showTime();
*/      
    return true;    
}

</script>
{% endblock script %}

            