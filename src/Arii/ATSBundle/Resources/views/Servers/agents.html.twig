{# src/Arii/JIDBundle/Resources/views/Default/history.html.twig #}
{% extends "AriiATSBundle::layout.html.twig" %}
{% block body %}
<body>
<script type="text/javascript">
var max_history = 0; // pas d'historique
var chained = 0; // que des standalone
var only_warning = 0; // que les problemes
var update=30;
var autorefresh;
var status;

dhtmlxEvent(window,"load",function(){     
    globalLayout = new dhtmlXLayoutObject(document.body,"3L");  
    globalLayout.cells("a").setWidth(360); 
    globalLayout.cells("a").hideHeader(); 
    globalLayout.cells("b").setText("{{ "Servers" | trans }}"); 

    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_ATS_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );

    myDonut =  globalLayout.cells("a").attachChart({
            view:"donut",
            container:"pie_chart_container",
            value:"#PROCESSES#",
            label:"",
            tooltip: "#STATUS#",
            color: "#COLOR#",
            border:false,
            pieInnerText: "#PROCESSES#",
            shadow: 0,
            legend:{
                width: 0,
                template: "#STATUS#",
                valign:"top",
                align:"left"
            } 
    });
    myDonut.load( "{{ url('xml_ATS_agents_pie') }}" );

    globalLayout.cells("b").setText("{{ "Agents" | trans }}"); 
    myGrid = globalLayout.cells("b").attachGrid();
    myGrid.selMultiRows = true;
    myGrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
    myGrid.setHeader("{{ "Machine" | trans }},{{ "Status" | trans }},{{ "Agent" | trans }},{{ "Description" | trans }},{{ "Queue" | trans }},{{ "Type" | trans }},{{ "OS" | trans }},{{ "Max load" | trans }},{{ "Factor" | trans }},{{ "Hostname" | trans }},{{ "Port" | trans }}");
    myGrid.attachHeader("#text_filter,#select_filter,#text_filter,#text_filter,#text_filter,#select_filter,#select_filter,#select_filter,#select_filter,#text_filter,#select_filter");
    myGrid.setInitWidths("200,100,120,*,150,80,80,80,80,200,80");
    myGrid.setColAlign("left,left,left,left,left,left,left,left,left,left,left");
    myGrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro,ro,ro,ro");
    myGrid.setColSorting("date,str,str,str,str,str,str,str,str,str,str");
    myGrid.enableAlterCss("","");
    myGrid.init();
    
    myGrid.load( "{{ url('xml_ATS_agents_grid') }}");

    // Premier chargement avant le smart rendering
    autorefresh = setInterval( "GridRefresh()",update*1000);
});

function GlobalRefresh() {
    clearInterval( autorefresh );
    GridRefresh();
    autorefresh = setInterval( "GridRefresh()", update*1000 );
}

function GridRefresh() {
    var currentTime = new Date();
    var hours = currentTime.getHours();
    var minutes = currentTime.getMinutes();
    var seconds = currentTime.getSeconds();
    if (minutes < 10){
        minutes = "0" + minutes;
    }
    if (seconds < 10){
        seconds = "0" + seconds;
    }
    myRibbon.setItemText( "refresh", hours + ":" + minutes + ":" +  seconds );
    myGrid.load("{{ url('xml_ATS_agents_grid') }}?time="+seconds+"&history="+max_history+"&chained="+chained+"&only_warning="+only_warning, function(){    
        myDonut.load( "{{ url('xml_ATS_agents_pie') }}" );
        globalLayout.cells("b").progressOff();
        myGrid.refreshFilters();
        myGrid.filterByAll();
    });    
}

function Detail(id) {
}


</script>
</body>
{% endblock %}
