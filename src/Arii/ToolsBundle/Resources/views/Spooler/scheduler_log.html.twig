{# src/Arii/PublicBundle/Resources/views/index.html.twig #}
{% extends "AriiCoreBundle::layout.html.twig" %}
{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section table_section">
	<!--[if !IE]>start title wrapper<![endif]-->
	<div class="title_wrapper">
		<h2>{{ "Scheduler log" | trans }}</h2>
		<span class="title_wrapper_left"></span>
<ul  class="section_menu">
      <li><a href="{{ url('arii_Home_log_server') }}" class=""><span><span>{{ "Main" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_Home_log_scheduler') }}" class="active"><span><span>{{ "Scheduler" | trans }}</span></span></a></li>
</u
		<span class="title_wrapper_right"></span>
	</div>
	<!--[if !IE]>end title wrapper<![endif]-->
<!--[if !IE]>start section content<![endif]-->
	<div class="section_content">
		<!--[if !IE]>start section content top<![endif]-->
		<div class="sct">
			<div class="sct_left">
				<div class="sct_right">
					<div class="sct_left">
						<div class="sct_right">
<div id="mygrid" style="height:500px;background-color:white;position:relative;overflow:hidden;"></div>
<script type="text/javascript">
var format=2;
var lines=1000;
var file='scheduler.log';
var search_text='';
var search_date="{{ app.session.get('ref_date') }}";

var dhxLayout = new dhtmlXLayoutObject("mygrid","2E");

dhxLayout.cells("a").hideHeader();
dhxLayout.cells("a").setHeight(120);

layoutFiles = dhxLayout.cells("a").attachLayout("2U");
layoutFiles.cells("a").hideHeader();
var myfile = layoutFiles.cells("a").attachGrid();
myfile.setSkin("dhx_skyblue");
myfile.setImagePath( "{{ asset('bundles/ariicore/images/') }}");
myfile.setHeader("{{ "File" | trans }},{{ "Date" | trans }},{{ "Size" | trans }}");
myfile.setColAlign("left,right,right");
myfile.setInitWidths("*,140,60");
myfile.setColTypes("ro,ro,ro");
myfile.init();
myfile.loadXML("{{ url('xml_Home_log_dirlist') }}");

var myForm,
formData;

dhtmlx.skin = "dhx_skyblue";
formData = [
  {
    type: "fieldset",
    label: "{{ "Uploader" | trans }} (< {{ upload_max_filesize }})",
    inputWidth: 150,
    inputHeight: 120,
    list: [
{
        type: "upload",
        name: "myFiles",
        inputWidth: 150,
        inputHeight: 110,
        url: "{{ url('json_Home_log_upload') }}",
        _swfLogs: "enabled",
        autoStart: true,
        swfPath: "{{ asset('bundles/ariicore/dhtmlx/dhtmlxForm/codebase/ext/uploader.swf') }}",
        swfUrl: "{{ url('json_Home_log_upload') }}"
    }]
    }];
layoutFiles.cells("b").setWidth(200);
layoutFiles.cells("b").hideHeader();
myForm = layoutFiles.cells("b").attachForm(formData);
myForm.getUploader("myFiles").setTitleText('');

myForm.setSkin("dhx_skyblue");

myForm.attachEvent("onUploadCancel", function(realName) {
    dhtmlx.message({
         type: "alert-warning",
         lifetime: 60000,
         text: "{{ "Upload canceled" | trans }} "+ realName });
});
myForm.attachEvent("onUploadFail", function(realName) {
    dhtmlx.message({
         type: "alert-error",
         lifetime: 60000,
         text: "{{ "Upload failed" | trans }} "+ realName });
});
myForm.attachEvent("onFileRemove", function(realName, serverName) {
    dhtmlx.message({
         type: "notice",
         lifetime: 60000,
         text: "{{ "File removed" | trans }}: "+ realName + "->" + (serverName == null ? "{{ "Not uploaded" | trans }}" : serverName) });
});

myForm.attachEvent("onUploadComplete", function(count) {
    myfile.loadXML("{{ url('xml_Home_log_dirlist') }}", function () {
        dhxTabbar.tabs("a1").setActive();
    });
});

dhxLayout.cells("b").hideHeader();
var tabbar = dhxLayout.cells("b").attachTabbar();
tabbar.setImagePath("{{asset("arii/dhtmlx/dhtmlxTabbar/codebase/imgs/")}}");
tabbar.setSkin("dhx_skyblue");
tabbar.addTab("b1","{{ "Chart" | trans }}","100px");
tabbar.addTab("b2","{{ "List" | trans }}","100px");
tabbar.setTabActive("b1");

mygrid = tabbar.cells("b2").attachGrid();
mygrid.setImagePath( "{{ asset('bundles/ariicore/images/treegrid/') }}");
mygrid.setHeader("{{ "Day" | trans }},{{ "Timestamp" | trans }},{{ "Time" | trans }},{{ "PID" | trans }},{{ "Thread" | trans }},{{ "Type" | trans }},{{ "Status" | trans }},{{ "Message" | trans }}");
mygrid.attachHeader("#select_filter,#text_filter,#numeric_filter,#select_filter,#select_filter,#select_filter,#select_filter,#text_filter");
mygrid.setInitWidths("50,100,50,80,80,80,80,*");
mygrid.setColAlign("right,right,right,right,right,left,left,left");
mygrid.setColTypes("ro,ro,ro,ro,ro,ro,ro,ro");
mygrid.init();
mygrid.setSkin('dhx_skyblue');

var BarChart = tabbar.cells("b1").attachChart( {
    view: "scatter",
    xValue: "#START#",
    yValue: "#DURATION#",
    color: "#COLOR#",
    tooltip: {
        template: "#TOOLTIP#",
        dx:10,
        dy:5
    },
    item:{
        label: "#NB#",
        borderColor: "#COLOR#" ,
        color: "#COLOR#",
        type: 'r'
    },
    yAxis:{
        title: "{{ "Duration" | trans }} (s)"
    },
    xAxis:{
        title: "{{ "Start time" | trans }}",
        template: ""
    }
});
BarChart.load( "{{ url('xml_Home_log_server_chart') }}?file="+file, "xml" );

var toolbar = tabbar.cells("b2").attachToolbar();
toolbar.setIconsPath("{{ asset('bundles/ariicore/images/toolbar/') }}");
toolbar.loadStruct("{{ url('arii_Home_log_toolbar') }}");
toolbar.attachEvent( "onClick", function(id, value) {
    switch (id) {
        case "menu":
            break;
         default:
            format=id;
            GridRefresh();
            break;
    }
});
    
BarChart.attachEvent("onItemClick", function(id){
    search_date=id;
    dhxLayout.cells("b").progressOn();
    tabbar.setTabActive("b2");
    toolbar.setValue("search_date", search_date);
    mygrid.loadXML( "{{ url('xml_Home_log_server') }}?file="+file+"&date="+search_date+"&max="+lines+"&format=1&text="+search_text, function() {
        dhxLayout.cells("b").progressOff();
    }); 
});

toolbar.attachEvent("onValueChange", function (id) { 
    lines = toolbar.getValue(id);
    GridRefresh();
});

toolbar.attachEvent("onEnter", function(id,value) {
    switch(id) {
        case 'search_date':
            search_date=value;
            break;
        case 'search_text':
            search_text=value;
            break;
        default:
            break;
    }
    GridRefresh();
});

myfile.attachEvent("onRowDblClicked",function(id){
    file = myfile.cells(id,0).getValue();
    ChartRefresh();
});

function GridRefresh( ) {
    if (file=='') return true;
    dhxLayout.cells("b").progressOn();
    mygrid.clearAll();
    tabbar.setTabActive("b2");
    mygrid.loadXML( "{{ url('xml_Home_log_server') }}?file="+file+"&date="+search_date+"&max="+lines+"&format=1&text="+search_text, function() {
        BarChart.clearAll();
        BarChart.load( "{{ url('xml_Home_log_server_chart') }}?file="+file, "xml", function() {
            dhxLayout.cells("b").progressOff();
        });
    });
}

function ChartRefresh( ) {
    if (file=='') return true;
    dhxLayout.cells("b").progressOn();
    BarChart.clearAll();
    BarChart.load( "{{ url('xml_Home_log_server_chart') }}?file="+file, "xml", function() {
        mygrid.clearAll();
        tabbar.setTabActive("b1");
        mygrid.loadXML( "{{ url('xml_Home_log_server') }}?file="+file+"&date="+search_date+"&max="+lines+"&format=1&text="+search_text, function() {
            dhxLayout.cells("b").progressOff();
        });
    });
}

function GlobalRefresh() {};
</script>
                                                </div>
					</div>
				</div>
			</div>
		</div>
		<!--[if !IE]>end section content top<![endif]-->
		<!--[if !IE]>start section content bottom<![endif]-->
		<span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
		<!--[if !IE]>end section content bottom<![endif]-->
		
	</div>
	<!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->
{% endblock %}