{# src/Arii/AdminBundle/Resources/views/Default/database.html.twig #}

{% extends "AriiAdminBundle::layout.html.twig" %}

{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section">
        <!--[if !IE]>start title wrapper<![endif]-->
        <div class="title_wrapper">
                <h2>{{ "Repositories" | trans }}</h2>
                <ul  class="section_menu">
      <li><a href="{{ url('arii_Admin_spoolers') }}" class=""><span><span><img src="{{ asset('arii/images/menu/cog.png') }}"/>&nbsp;{{ "Spoolers" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_Admin_repositories') }}" class="active"><span><span><img src="{{ asset('arii/images/menu/database.png') }}"/>&nbsp;{{ "Repositories" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_Admin_connections') }}" class=""><span><span><img src="{{ asset('arii/images/menu/transmit.png') }}"/>&nbsp;{{ "Connections" | trans }}</span></span></a></li>
      <li><a href="{{ url('arii_Admin_sites') }}" class=""><span><span><img src="{{ asset('arii/images/menu/world.png') }}"/>&nbsp;{{ "Sites" | trans }}</span></span></a></li>
            </ul>
                <span class="title_wrapper_left"></span>
                <span class="title_wrapper_right"></span>
        </div>
        <!--[if !IE]>end title wrapper<![endif]-->
        <!--[if !IE]>start section content<![endif]-->
        <div class="section_content">
                <!--[if !IE]>start section content top<![endif]-->
                <div class="sct">
                        <div class="sct_left">
                                <div class="sct_right">
                                        <div class="sct_left">
                                                <div class="sct_right">
     <div id="mygrid" style="height:659px;overflow:hidden;width: 100%;position: relative;"></div>
                                                </div>
                                        </div>
                                </div>
                        </div>
                </div>
                <!--[if !IE]>end section content top<![endif]-->
                <!--[if !IE]>start section content bottom<![endif]-->
                <span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
                <!--[if !IE]>end section content bottom<![endif]-->

        </div>
        <!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->

<script language="javascript">
dhtmlx.skin = "dhx_skyblue";

var menu = new dhtmlXMenuObject();
menu.setIconsPath( "{{ asset('arii/images/menu/') }}" );
menu.renderAsContextMenu();
menu.attachEvent("onClick", onMenuClick);
menu.loadXML("{{ url('xml_Admin_repositories_menu') }}");

var dhxLayout = new dhtmlXLayoutObject("mygrid","2U");
dhxLayout.cells("a").hideHeader();
dhxLayout.cells("b").hideHeader();
dhxLayout.cells("b").setWidth(422);

var toolbarb;
toolbarb = dhxLayout.cells("b").attachToolbar();
toolbarb.setIconsPath("{{ asset('arii/images/toolbar/') }}");
toolbarb.loadXML("{{ url('xml_Admin_repository_toolbar') }}", function () {
    {%if id == '' %}
        toolbarb.hideItem("delete_repository");
    {%endif%}
});
toolbarb.attachEvent("onClick",onClick);

var mygrid;
var sb = dhxLayout.cells("a").attachStatusBar();
sb.setText('<div id="recinfoArea"></div>');
dhxLayout.cells("a").vs[dhxLayout.cells("a").av].sbHeight = 40;

mygrid = dhxLayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
mygrid.setHeader("{{ "Name"| trans }},{{ "Description"| trans }},{{ "Timezone"| trans }}");
mygrid.attachHeader("#text_filter,#text_filter,#select_filter");
mygrid.setInitWidths("300,*,200");
mygrid.setColAlign("left,left,left");
mygrid.setColTypes("tree,ro,ro");
mygrid.enableContextMenu(menu);
mygrid.enableLightMouseNavigation( false );
mygrid.enablePaging(true,"25", 3, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,["25"]);
mygrid.load("{{ url('xml_Admin_repositories_grid') }}");
mygrid.init();

mygrid.attachEvent("onRowDblClicked", function (rid) {
    EditRepository(rid);
});

var myform,formData;
formData = [
{ type: "settings", position: "label-left", labelWidth: 100, inputWidth: 250,labelAlign: "right" },
{
    name: "fieldset",
    type: "fieldset",
    label: "{{ "Repository" | trans }}",
    width: "auto",
    list: 
        [
            {
                type: "hidden",
                name: "id"
            },
            {
                type: "input",
                name: "name",
                label: "{{ "Name" | trans }}",
                required: true,
                note: 
                    { text: "{{ "repository.name.note" | trans }}" }
            },
            {
                type: "select",
                name: "db_id",
                label: "{{ "Database" | trans }}",
                connector: "{{ url('xml_Admin_repositories_connections') }}",
                note: 
                    { text: "{{ "repository.db.note" | trans }}" }
            },
            {
                type: "input",
                name: "timezone",
                label: "{{ "Time Zone" | trans }}",
                value: "GMT",
                note: 
                    { text: "{{ "repository.timezone.note" | trans }}" }
            },
            {
                type: "input",
                name: "description",
                label: "{{ "Description" | trans }}",
                rows: 3,
                note: 
                    { text: "{{ "repository.description.note" | trans }}" }
            }
        ]
}
];
myform = dhxLayout.cells("b").attachForm(formData);
myform.setSkin("dhx_skyblue");
myform.enableLiveValidation(true);
{%if id != '' %}
myform.load("{{ url('xml_Admin_repository_form') }}?id="+"{{ id }}" );
{%endif%}
    
function onClick(id){
    switch (id){
        case "add_repository":
            NewRepository();
            break;
        case "delete_repository":
            id = myform.getItemValue("id");
            DeleteRepository(id);
            break;
        case "save_repository":
            if(!myform.validate())
            {
                dhtmlx.message({
                    title:"Error",
                    type: "error",
                    lifetime: "60000",
                    text: "{{ "Please type in all the required fields!" | trans }}"
                 });
                return;
            }
            myform.send("{{ url('xml_Admin_repository_save') }}","POST",function(loader,response){
               if(response === "susccess")
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "Notice",
                    lifetime: "60000",
                    text: "Repository Saved"
                 });
                 GridRefresh();
               }
               else 
               {
                 dhtmlx.message({
                    title:"{{ "Save" | trans }}",
                    type: "error",
                    lifetime: "60000",
                    text: response
                 });
               }
            });
        break;
        default:
            break;
    }
}

function onMenuClick(menuitemId, type)
{
    var rid = mygrid.contextID.split("_")[0];
    switch(menuitemId){
        case "add_repository":
            NewRepository();
            break;
        case "edit_repository":
            EditRepository(rid);
            break;
        case "delete_repository":
            DeleteRepository(rid);
            break;
        break;
        default:
            alert(menuitemId);
    }
    return true;
}

function GridRefresh()
{
    mygrid.clearAll();
    mygrid.load("{{ url('xml_Admin_repositories_grid') }}");
}

function NewRepository() {
    myform.clear();
    myform.setItemFocus("name");
    myform.setItemLabel("fieldset","{{ "New repository" | trans }}");
    toolbarb.hideItem("delete_repository");
}

function EditRepository(id) {
    dhxLayout.cells("a").progressOn();
    toolbarb.showItem("delete_repository");
    myform.setItemLabel("fieldset","{{ "Edit repository" | trans }}");
    myform.clear();
    myform.load("{{ url('xml_Admin_repository_form') }}?id="+id, function () {
        dhxLayout.cells("a").progressOff();
    });
}

function DeleteRepository(id) {
    dhtmlx.confirm({
     title: "{{ "Delete Repository" | trans }}",
     type: "confirm-error",
     text: "{{ "repository.message.delete" | trans }}",
     callback: function(answer) { if (answer) {
            mygrid.deleteRow(id); 
            mydataprocessor.sendData();
        }
    },
     cancel: "{{ "No" | trans }}",
     ok: "{{ "Yes" | trans }}" });
 }
 
 function GlobalRefresh() { }
</script>

{% endblock %}
