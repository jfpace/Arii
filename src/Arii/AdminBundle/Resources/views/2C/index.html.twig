{# src/Arii/AdminBundle/Resources/views/Default/database.html.twig #}

{% extends "AriiAdminBundle::layout.html.twig" %}

{% block content %}
<!--[if !IE]>start section<![endif]-->	
<div class="section">
        <!--[if !IE]>start title wrapper<![endif]-->
        <div class="title_wrapper">
                <h2>{{ "Spoolers" | trans }}</h2>
                <span class="title_wrapper_left"></span>
                <span class="title_wrapper_right"></span>
        </div>
        <!--[if !IE]>end title wrapper<![endif]-->
        <!--[if !IE]>start section content<![endif]-->
        <div class="section_content">
                <!--[if !IE]>start section content top<![endif]-->
                <div class="sct">
                        <div class="sct_left">
                                <div class="sct_right">
                                        <div class="sct_left">
                                                <div class="sct_right">
    <div id="toolbarObj"></div>

    <div id="mygrid" style="height:780px;overflow:hidden;width: 100%;position: relative;"></div>


                                                </div>
                                        </div>
                                </div>
                        </div>
                </div>
                <!--[if !IE]>end section content top<![endif]-->
                <!--[if !IE]>start section content bottom<![endif]-->
                <span class="scb"><span class="scb_left"></span><span class="scb_right"></span></span>
                <!--[if !IE]>end section content bottom<![endif]-->

        </div>
        <!--[if !IE]>end section content<![endif]-->
</div>
<!--[if !IE]>end section<![endif]-->

{% if is_granted('ROLE_SUPER_ADMIN') %}


<script language="javascript">
dhtmlx.skin = "dhx_skyblue";


var mylayout = new dhtmlXLayoutObject("mygrid","1C");
mylayout.cells("a").hideHeader();
mylayout.cells("a").setHeight(490);


var toolbar;
toolbar = mylayout.cells("a").attachToolbar();
toolbar.setIconsPath("{{ asset('arii/images/toolbar/') }}");
toolbar.loadXML("{{ url('arii_Admin_toolbar_connection') }}");
toolbar.attachEvent("onClick",onButtonClick);

var mygrid;
var sb = mylayout.cells("a").attachStatusBar();
sb.setText('<div id="recinfoArea"></div>');
mylayout.cells("a").vs[mylayout.cells("a").av].sbHeight = 40;

mygrid = mylayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
mygrid.enableTreeGridLines(true);
mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Location"| trans }},{{ "Supervisor"| trans }},{{ "HOST" | trans }},{{ "Port" }},{{ "Events"| trans }},{{ "Version"| trans }},{{ "Status"| trans }}");
mygrid.setColTypes("tree,ro,ro,ro,ro,ro,ro");
mygrid.setInitWidths("470,180,150,130,200,200,*");
mygrid.setColAlign("left,left,left,left,left,left,left");
mygrid.enableLightMouseNavigation( true );
mygrid.enablePaging(true,"25", 3, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,["25"]);
mygrid.load("{{ url('arii_Admin_show_spooler') }}");
mygrid.init();
var mydataprocessor = new dataProcessor("{{ url('arii_Admin_show_spooler') }}"); 
mydataprocessor.setTransactionMode("POST",true); 
mydataprocessor.setUpdateMode("off");
mydataprocessor.init(mygrid);



function onButtonClick(id, value)
{
    switch (id){
        case "refresh":
            GridRefresh();
        default:
            break;
    }
}
function GridRefresh()
{
    mygrid.load("{{ url('arii_Admin_show_spooler') }}");
}


</script>


{% else %}

<script language="javascript">
dhtmlx.skin = "dhx_skyblue";

var menu = new dhtmlXMenuObject();
menu.setIconsPath( "{{ asset('arii/images/menu/') }}" );
menu.renderAsContextMenu();
menu.attachEvent("onClick", onMenuClick);
menu.loadXML("{{ url('arii_Admin_menu_spoolers') }}");

var mylayout = new dhtmlXLayoutObject("mygrid","2U");
mylayout.cells("a").hideHeader();
mylayout.cells("a").setWidth(1000);
mylayout.cells("b").setHeight(270);
mylayout.cells("b").hideHeader();


var toolbar;
toolbar = mylayout.cells("a").attachToolbar();
toolbar.setIconsPath("{{ asset('arii/images/toolbar/') }}");
toolbar.loadXML("{{ url('arii_Admin_toolbar_management') }}");
toolbar.attachEvent("onClick",onButtonClick);

var toolbarb;
toolbarb = mylayout.cells("b").attachToolbar();
toolbarb.setIconsPath("{{ asset('arii/images/toolbar/') }}");
toolbarb.loadXML("{{ url('arii_Admin_toolbar_management_add') }}");
toolbarb.attachEvent("onClick",onClick);

var mygrid;
var sb = mylayout.cells("a").attachStatusBar();
sb.setText('<div id="recinfoArea"></div>');
mylayout.cells("a").vs[mylayout.cells("a").av].sbHeight = 40;

mygrid = mylayout.cells("a").attachGrid();
mygrid.selMultiRows = true;
mygrid.setImagePath("{{ asset('arii/images/treegrid/') }}");
mygrid.enableTreeGridLines(true);
mygrid.enableTreeCellEdit(false);
mygrid.setHeader("{{ "Location"| trans }},{{ "Supervisor"| trans }},{{ "IP Adress" | trans }},{{ "Port" }},{{ "Events"| trans }},{{ "Version"| trans }},{{ "Status"| trans }}");
mygrid.setInitWidths("300,120,150,100,150,100,*");
mygrid.setColAlign("left,left,left,left,left,left,left");
mygrid.setColTypes("tree,ro,ro,ro,ro,ro,ro,ro");
mygrid.enableContextMenu(menu);
mygrid.enableLightMouseNavigation( true );
mygrid.enablePaging(true,"25", 3, "recinfoArea");
mygrid.setPagingSkin("toolbar","dhx_skyblue");
mygrid.setPagingWTMode(true,true,true,["25"]);
mygrid.load("{{ url('arii_Admin_show_spooler') }}");
mygrid.init();
var mydataprocessor = new dataProcessor("{{ url('arii_Admin_show_spooler') }}"); 
mydataprocessor.setTransactionMode("POST",true); 
mydataprocessor.setUpdateMode("off");
mydataprocessor.init(mygrid);

mygrid.attachEvent("onRowDblClicked",onRowDblClicked);
mygrid.attachEvent("onBeforeContextMenu",onBeforeContextMenu);

var myform,formData;
formData = [
    { type: "settings", position: "label-left", labelWidth: 150, inputWidth: 220,labelAlign: "left",noteWidth: 220 },
    {    type:"fieldset",
         name: "connection",
         label:"{{ "Spooler"| trans}}",
         width:"auto",
         list: [
                 {type: "hidden",name: "id"},         
                 { type: "input",
                   name: "scheduler",
                   label: "{{ "Spooler Name"| trans }}",
                   required: true,
                   note: {
                       text: "Please type a name for the spooler"
                   }
                 },
                 { type: "select",
                   name: "supervisor_id",
                   label: "{{ "Supervisor"| trans }}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_supervisor_list') }}",
                   note: {
                        text: "Please choose a supervisor for the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "site_id",
                   label: "{{ "Site" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_site_list') }}",
                   note: {
                        text: "Please specify a site for the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "transfer_id",
                   label: "{{ "File Transfer" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_transfer_list') }}",
                   note: {
                        text: "Please specify a connection for file tranferation of the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "smtp_id",
                   label: "{{ "Mail Connection" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_mail_list') }}",
                   note: {
                        text: "Please specify a mail server for the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "db_id",
                   label: "{{ "Database Connection" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_db_list') }}",
                   note: {
                        text: "Please specify a database for the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "connection_id",
                   label: "{{ "Connection" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_connection_list') }}",
                   note: {
                        text: "Please specify a access connection for the spooler"
                   }
                 },
                 {
                   type: "select",
                   name: "http_id",
                   label: "{{ "Jetty Http Connection" | trans}}",
                   options: [{ text: "", value: null }],
                   connector: "{{ url('arii_Admin_spooler_management_http_list') }}",
                   note: {
                        text: "Please specify a access connection for the spooler"
                   }
                 },
                 
                 { type: "input",
                   name: "events",
                   label: "{{ "Events"| trans }}",
                   note: {
                        text: "Type the events for this spooler"
                   },
                   required: true
                 },{type: "newcolumn"},
                 { type: "input",
                   name: "version",
                   label: "{{ "Version"| trans }}",
                   note: {
                        text: "Specify the version of this spooler"
                   }
                 },
                 { type: "select",
                   name: "status",
                   label: "{{ "Status"| trans }}",
                   options: [
                        {text: "Enabled", value: "enabled"},
                        {text: "Disabled", value: "disabled"}
                   ],
                   note: {
                        text: "Specify the status of this spooler"
                   }
                 },        
                 {{ render(controller( "AriiAdminBundle:Spooler:show_information" )) }}
               ]
    }
];
myform = mylayout.cells("b").attachForm(formData);
myform.setSkin("dhx_skyblue");
myform.enableLiveValidation(true);


function onClick(id){
    switch (id){
        case "add":
            myform.clear();
            myform.setItemFocus("scheduler");
        break;
        case "save":
            myform.send("{{ url('arii_Admin_spooler_management_save') }}","POST",function(loader,response){
                alert(response);
                if(response === "success")
                {
                 dhtmlx.message({
                    title:"Save",
                    type: "Notice",
                    lifetime: "60000",
                    text: "Spooler Saved"
                 });
                 myform.setItemFocus("scheduler");
                 
                 mygrid.loadXML("{{ url('arii_Admin_show_spooler') }}");
               }
            });
        break;
        default:
            break;
    }
}

function onButtonClick(id, value)
{
    switch (id){
        case "update":
            mydataprocessor.sendData();
        break;
        case "refresh":
            GridRefresh();
        default:
            break;
    }
}
function GridRefresh()
{
    mygrid.load("{{ url('arii_Admin_show_spooler') }}");
}
function onMenuClick(menuitemId, type)
{
    var rid = mygrid.contextID.split("_")[0];
    switch(menuitemId){
        case "Delete":
            dhtmlx.confirm({
            title: "{{ "Delete Connection" | trans }}",
            type: "confirm-error",
            text: "{{ "Do you really want to delete this connection ?" | trans }}",
            callback: function(answer) { if (answer) mygrid.deleteRow(rid); },
            cancel: "{{ "No" | trans }}",
            ok: "{{ "Yes" | trans }}" });
        break;
        case "add_site":
            AddSite(rid);
        break;
        default:
            alert(menuitemId);
    }
    return true;
}

var dhxWins = new dhtmlXWindows();
dhxWins.enableAutoViewport(false);
dhxWins.attachViewportTo("wrapper");
dhxWins.setImagePath("{{ asset('arii/js/dhtmlx/dhtmlxWindows/codebase/imgs/') }}");

function AddSite(rid)
{
var largeur = 600;
    var msg = dhxWins.createWindow( "msgwin" , (document.getElementById("wrapper").offsetWidth-largeur)/2, 200, largeur, 500 );
    msg.setText("{{ "Add site on Company " | trans }} "+rid);
var winLayout;
winLayout = msg.attachLayout("1C");
winLayout.cells("a").hideHeader();

var toolbar;
toolbar = winLayout.cells("a").attachToolbar();
toolbar.setIconsPath("{{ asset('arii/images/toolbar/') }}");
toolbar.loadXML("{{ url('arii_Admin_toolbar_add_site') }}");
toolbar.attachEvent("onClick",function(buttonId){
    switch (buttonId) {
        case "save":
            msg.progressOn();
            mySiteForm.send("{{ url('arii_Admin_enterprise_management_saveSite') }}","POST",function(loader,response){
                if (response==="success")
                {
                    dhtmlx.message({
                    type: "Notice",
                    expire: 5000,
                    width: "500px",
                    text: "Site Added!" });
                    myform.unload();
                    myform = mylayout.cells("b").attachForm(formData);
                    GridRefresh();
                    msg.close();
                }
            });
            break;
        case "cancel":
            msg.close();
            break;
        default:
            alert(buttonId);
    }
    return true;
});

var mySiteForm,siteFormData;
siteFormData = [
    { type: "settings", position: "label-left", labelWidth: 120, inputWidth: 300, noteWidth: 300},
    {    type:"fieldset",
         name: "user",
         label:"{{ "New Site"| trans}}",
         width: "auto",
         list: [   {
                     type: "hidden",
                     name: "enterprise",
                     value: rid
                   },
                   { type: "input",
                     name: "name",
                     label: "{{ "Site Name"| trans }}",
                     required: true,
                     note: {
                       text: "Enter your Site Name here. This field can not be empty"
                     }
                   },
                  { type: "input",
                    name: "codes",
                    label: "{{ "Country Code"| trans }}",
                    required: true,
                    note: {
                       text: "Type the country code for this site!"
                    }
                  },
                  {
                    type: "input",
                    name: "timezone",
                    label: "{{ "Timezone" | trans }}",
                    required: true,
                    note: {
                       text: "Type the timezone for this site!"
                    }
                  },
                  {
                    type: "input",
                    name: "description",
                    label: "{{ "Description" | trans }}",
                    note: {
                       text: "Type the description for this site!"
                    },
                    rows: 5
                  }
               ]
    }
];
mySiteForm = winLayout.cells('a').attachForm(siteFormData);

return true;
    
}

function onRowDblClicked(rid)
{
    myform.load("{{ url('arii_Admin_spooler_management_edit') }}?id="+rid);
}

function onBeforeContextMenu(rowId, celInd, grid)
{
    if(mygrid.getUserData(rowId,"type")==="enterprise")
    {
        menu.showItem("add_site");
        menu.hideItem("Delete");
        menu.hideItem("Edit");
        return true;
    } else if(mygrid.getUserData(rowId,"type")==="spooler")
    {
        menu.hideItem("add_site");
        menu.showItem("Delete");
        menu.showItem("Edit");
        return true;
    } else
    {
        return false;
    }
}

</script>


{% endif%}

{% endblock %}
