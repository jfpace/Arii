{% extends "AriiAdminBundle::layout.html.twig" %}
{% block body %}
<script language="javascript">
dhtmlxEvent(window,"load",function(){  
        
    globalLayout = new dhtmlXLayoutObject(document.body,"2U");  
    globalLayout.cells("a").setWidth(350); 
    globalLayout.cells("a").hideHeader(); 
    globalLayout.cells("b").hideHeader(); 

    globalMenu = globalLayout.cells("a").attachMenu();
    globalMenu.setIconsPath( "{{ asset('/bundles/ariicore/images/menu/') }}" );
    globalMenu.loadStruct("{{ url('xml_menu') }}?route={{ app.request.attributes.get('_route') }}");

    myRibbon = globalLayout.cells("a").attachRibbon(); 
    myRibbon.setIconPath( "{{ asset('/bundles/ariicore/images/ribbon/') }}" );
    myRibbon.loadStruct("{{ url('json_Admin_ribbon') }}");
    myRibbon.attachEvent("onStateChange", StateRibbon );
    myRibbon.attachEvent("onClick", ClickRibbon );    
    
    menu = new dhtmlXMenuObject();
    menu.setIconsPath( "{{ asset('arii/images/menu/') }}" );
    menu.renderAsContextMenu();
    menu.attachEvent("onClick", onMenuClick);
    menu.loadStruct("{{ url('xml_Admin_connections_menu') }}");

    var toolbarb;
    toolbarb = globalLayout.cells("b").attachToolbar();
    toolbarb.setIconsPath("{{ asset('arii/images/toolbar/') }}");
    toolbarb.loadStruct("{{ url('xml_Admin_connection_toolbar') }}", function () {
        toolbarb.hideItem("delete_connection");
    });
    toolbarb.attachEvent("onClick",onClick);

    mygrid = globalLayout.cells("a").attachGrid();
    mygrid.selMultiRows = true;
    mygrid.setImagePath("{{ asset('arii/images/treegrid/') }}");

    mygrid.setHeader("{{ "Connection"| trans }},{{ "Description"| trans }},{{ "Host"| trans }}");
    mygrid.attachHeader("#text_filter,#text_filter,#select_filter");
    mygrid.setInitWidths("300,*,150");
    mygrid.setColAlign("left,left,left");
    mygrid.setColTypes("ro,ro,ro");
    mygrid.enableContextMenu(menu);
    mygrid.enableLightMouseNavigation( true );
    mygrid.load("{{ url('xml_Admin_connections_grid') }}");
    mygrid.i18n.paging={
          results:"Results",
          records: "{{ "Records from" | trans }} ",
          to: " to ",
          page:"Page ",
          perpage:"rows per page",
          first:"To first Page",
          previous:"Previous Page",
          found:"Found records",
          next:"Next Page",
          last:"To last Page",
          of:" of ",
          notfound:"No Records Found" };
    mygrid.init();
    mygrid.attachEvent("onRowDblClicked", function (rid) {
        EditConnection(rid);
    });

    var myform,formData;
    formData = [
    { type: "settings", position: "label-left", labelWidth: 70, inputWidth: 300,labelAlign: "right" },
          { type: "hidden",
            name: "id"
          },         
          {    name: "fieldset",
              type: "fieldset",
             label: "{{ "New connection" | trans }}",
             width: "auto",
             list: 
               [  {  type: "input",
                     name: "title",
                     label: "{{ "Title" | trans }}",
                     required: true,
                     note: 
                       {  text: "{{ "connection.title.note" | trans }}"
                       }
                  },
                  {  type: "input",
                     name: "description",
                     label: "{{ "Description"| trans }}",
                     rows: 2,
                     note: {  text: "{{ "connection.description.note" | trans }}"
                     }
                  },
                  {  type: "input",
                     name: "host",
                     label: "{{ "Host"| trans }}",
                     note: 
                       {  text: "{{ "connection.host.note" | trans }}"
                       }
                  },
          {  type: "select",
                     name: "category_id",
                     label: "{{ "Category"| trans }}",
                     note:
                       {  text: "{{ "connection.category.note" | trans }}"
                       },
                     required: true,
                    options:
                     [ {{ render(controller( "AriiAdminBundle:Connection:form_structure" )) }}
                     ]
                   }

               ]
              }
    ];
    myform = globalLayout.cells("b").attachForm(formData);
    myform.setSkin("dhx_skyblue");
    myform.enableLiveValidation(true);
});

function onClick(id){
    switch (id){
        case "add_connection":
            NewConnection();
            break;
        case "delete_connection":
            id = myform.getItemValue("id");
            DeleteConnection(id);
            break;
        case "save_connection":
            if(!myform.validate())
            {
                dhtmlx.message({
                    title:"Error",
                    type: "error",
                    lifetime: "60000",
                    text: "{{ "Please type in all the required fields!" | trans }}"
                 });
                return;
            }
            globalLayout.cells("b").progressOn();
            myform.send("{{ url('xml_Admin_connection_save') }}","POST",function(loader,response){
                globalLayout.cells("b").progressOff();
                if(response === "success")
               {
                 dhtmlx.message({
                    title:"Save",
                    type: "Notice",
                    lifetime: "60000",
                    text: "Connection Saved"
                 });
                 myform.setItemFocus("title");
                 GridRefresh();
               }
               else 
               {
                   alert(response);
               }               
            });
        break;
        default:
            alert(id);
            break;
    }
}

function onMenuClick(menuitemId, type)
{
    var rid = mygrid.contextID.split("_")[0];
    switch(menuitemId){
        case "add_connection":
            NewConnection();
            break;
        case "edit_connection":
            EditConnection(rid);
            break;
        case "delete_connection":
            DeleteConnection(rid);
            break;
        default:
            alert(menuitemId);
    }
    return true;
}

function GridRefresh()
{
    mygrid.clearAll();
    mygrid.load("{{ url('xml_Admin_connections_grid') }}");
}

function NewConnection() {
    myform.clear();
    myform.setItemFocus("name");
    myform.setItemLabel("fieldset","{{ "New connection" | trans }}");
    toolbarb.hideItem("delete_connection");
}

function EditConnection(id) {
    globalLayout.cells("a").progressOn();
    toolbarb.showItem("delete_connection");
    myform.setItemLabel("fieldset","{{ "Edit connection" | trans }}");
    myform.clear();
    myform.load("{{ url('xml_Admin_connection_form') }}?id="+id, function () {
        globalLayout.cells("a").progressOff();
        cat = myform.getItemValue("category_id");
        myform.updateValues();
/*
        var opts = myform.getOptions("category_id");
        myform.reloadOptions("category_id", opts);
*/
     });
}

function DeleteConnection(id) {
    dhtmlx.confirm({
    title: "{{ "Delete Connection" | trans }}",
    type: "confirm-error",
    text: "{{ "connection.message.delete" | trans }}",
    callback: function(answer) { if (answer) mygrid.deleteRow(rid); },
    cancel: "{{ "No" | trans }}",
    ok: "{{ "Yes" | trans }}" });
}

function GlobalRefresh() {};
</script>

{% endblock %}
